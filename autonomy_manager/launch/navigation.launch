<?xml version="1.0"?>
<launch>
 <!--static transformation-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="link1_broadcaster" args="0 0 0 0 0 0 1 base_footprint base_link" />
    <node pkg="tf2_ros" type="static_transform_publisher" name="link3_broadcaster" args="-0.17 -0.12 0.65 0 0 0 -1 base_link os_sensor" />
    
    <!--nav stack interface -->
    <node name="utm_odom2" pkg="robomech_nav" type="utm_to_odom_tf_broadcaster_average2.py" output="screen"/>
    <node name="NavigationInterfaceNode" pkg="robomech_nav" type="navigation_interface.py" output="screen"/>

    <!--param and arg -->
    <arg name="no_static_map" default="true"/>
    <arg name="base_global_planner" default="navfn/NavfnROS"/>
    <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
    <param name="base_global_planner" value="asr_navfn/NavfnROS"/>
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <!--remap from="/odom" to="/utm_odom2" /-->
    <remap from="/cmd_vel" to="/cmd_vel_auto" />
    <param name="base_global_planner" value="$(arg base_global_planner)"/>
    <param name="base_local_planner" value="$(arg base_local_planner)"/>  
    <rosparam file="$(find robomech_nav)/config/planner.yaml" command="load"/>

    <!-- observation sources located in costmap_common.yaml -->
    <rosparam file="$(find robomech_nav)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robomech_nav)/config/costmap_common.yaml" command="load" ns="local_costmap" />

    <!-- local costmap, needs size -->
    <rosparam file="$(find robomech_nav)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    <param name="local_costmap/width" value="6.0"/>
    <param name="local_costmap/height" value="6.0"/>

    <!-- static global costmap, static map provides size -->
    <rosparam file="$(find robomech_nav)/config/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>
    
    <!-- global costmap with laser, for odom_navigation_demo -->
    <rosparam file="$(find robomech_nav)/config/costmap_global_laser.yaml" command="load" ns="global_costmap" if="$(arg no_static_map)"/>
    <param name="global_costmap/width" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/height" value="100.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/origin_x" value="-50.0" if="$(arg no_static_map)"/>
    <param name="global_costmap/origin_y" value="-50.0" if="$(arg no_static_map)"/>

    <!-- gps driver -->
    <include file="$(find microstrain_inertial_driver)/launch/microstrain.launch" if="$(arg useMicrostrain)">
        <arg name="params_file" value="$(find autonomy_manager)/config/hebi_microstrain.yaml"/>
    </include>
    
</launch>