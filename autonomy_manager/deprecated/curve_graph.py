import csv
import os
from adaptiveROS import adaptiveROS
from boundaryConversion import Conversion
import re
import math
from copy import copy
from itertools import product
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
import scipy as sp
import scipy.ndimage
from scipy.interpolate import griddata
from sklearn import preprocessing
from sklearn.gaussian_process import GaussianProcessRegressor
from sklearn.gaussian_process.kernels import RBF, ConstantKernel as C
from sklearn.gaussian_process.kernels import Matern, WhiteKernel, ConstantKernel
import matplotlib.pyplot as plt
import matplotlib
import matplotlib.colors as colors
import matplotlib.animation as animation
from matplotlib.animation import FuncAnimation
from environmentGeneration import generateRandomDistribution
from sklearn import preprocessing
from mpl_toolkits.axes_grid1.inset_locator import inset_axes
from scipy.stats import wasserstein_distance
import random


# adaptive = [0.58475680687877, 0.11681420392960058, 0.11296321276623932, 
#             0.05740883001513451, 0.057060994381039086, 0.047073909213290195, 
#             0.04126822938750875, 0.04393165768444951, 0.059984229648722825, 
#             0.061756048279656583, 0.02973955179316462, 0.027545029929438247, 
#             0.02385583118513177, 0.02396519726409534, 0.024089143716772895, 
#             0.017247914102268017, 0.012032149966304948, 0.009068149056771465, 
#             0.009484309309456795, 0.00948184894268617, 0.009412119161815903, 
#             0.009375027587969813, 0.006620964559474948, 0.006512098315784717, 
#             0.006470751728205405, 0.006441486223751635, 0.006427175613293398, 
#             0.006417750895077284, 0.006422252198134386, 0.009096650557162661, 
#             0.009113174272551402, 0.00921503950084748, 0.009304369524117683, 
#             0.00939433144590262, 0.009391944060596536, 0.009412843868212003, 
#             0.009423598637862714, 0.009429094136541577, 0.009435833521502597, 
#             0.00944076821243027, 0.009482666825187962, 0.009363173616101167, 
#             0.009371650794934518, 0.009368672334893536, 0.009349043257728064, 
#             0.009140314873074193, 0.009127867278437896, 0.009140022422450843, 0.008857266450334427]

# grid = [0.5816298569989464, 0.10507337449738993, 0.03577766132614621, 
#         0.05862705134793686, 0.0708639173901339, 0.0828437767845175, 
#         0.03838172257075143, 0.0672187961826103, 0.09963817108877002, 
#         0.0539663702857086, 0.09986343293095629, 0.08523524874575378, 
#         0.0765845013412464, 0.07835721247103641, 0.07758636111456063, 
#         0.07839954187766035, 0.02580051217063913, 0.027101052315174595, 
#         0.02927117653528167, 0.02823521369446222, 0.019795701455108485, 
#         0.022264952931755823, 0.012830587144552185, 0.012265957604046291, 
#         0.012328839398580177, 0.021920496640580447, 0.014112340709730458, 
#         0.012190955770926205, 0.010873454905979536, 0.010906546227287293, 
#         0.008892563219944015, 0.009532068969241646, 0.008673718144097951, 
#         0.00807505053837311, 0.007871426739720747, 0.006907963238098849, 
#         0.006925664228050623, 0.006647777992223018, 0.006323826729862734, 
#         0.006529115373023775, 0.006372122966330363, 0.005506560395589428, 
#         0.005307428517253159, 0.005535322025572636, 0.004836504968627678, 
#         0.005392805566561675, 0.005375367500402593, 0.005236267432615817, 0.004561748776820347]

adaptive = [0.5627657147271682, 0.3069955684872153, 0.08451479128541228, 0.06531889508663014, 0.09618728989820348, 0.09527726817615491, 0.10907422932093194, 0.12255343065449674, 0.15305506299142205, 0.08935063170237056, 0.06479230675060141, 0.07003607912450492, 0.04115048717697527, 0.05202719134763347, 0.059451595796101875, 0.04756612694735, 0.055372915246514894, 0.007327310344348366, 0.005136278934210875, 0.0049958876154311445, 0.005095967336857992, 0.005261731189004731, 0.005763996325055111, 0.0056720877171846104, 0.006942275213851595, 0.006145476071318583, 0.006255186993358557, 0.008543496783307758, 0.008611386687955275, 0.009011102870071383, 0.008382222312599637, 0.008060575155498458, 0.008299861815658765, 0.006330395238882958, 0.005501557835335017, 0.005749472980646283, 0.005896379161243151, 0.005871948193283852, 0.006334054592497079, 0.007163818028376051, 0.007234088872090318, 0.007007331197449799, 0.00686840405696785, 0.006800509746863711, 0.006834897045357949, 0.0068997583198850895, 0.006964132218988842, 0.00695326715837207, 0.0072399800937662]
grid = [0.5613024477506648, 0.20457775767684183, 0.1732496008826134, 0.1539259266075103, 0.1051721203034403, 0.08559105199210743, 0.05445503630103203, 0.055444290870989434, 0.05394361904178458, 0.02288087956632253, 0.06462339064114263, 0.03234773691405898, 0.0436473004459732, 0.051770531103611704, 0.023595013072598703, 0.02461179655527181, 0.03556851895198494, 0.016432827886222374, 0.016199499571069573, 0.01702669463939041, 0.0227598193625212, 0.023985201993560967, 0.010696700456117566, 0.008090553314610793, 0.008167753861121247, 0.022135472677508646, 0.005640227426135057, 0.005395846049488879, 0.004554490551497435, 0.005065982370723554, 0.006613171355542108, 0.009618117130822851, 0.0052244174283122904, 0.0049641010344722136, 0.0047817154962022665, 0.0045418138167495304, 0.010646001917798036, 0.007144178694600864, 0.0048771198271721095, 0.004113539347035559, 0.005292284366254916, 0.005381925813766147, 0.008448531685980606, 0.010662627758978279, 0.005460407608090826, 0.005399260446120214, 0.003752917213781881, 0.004260112304157004, 0.004165153732702175]
x = range(len(grid))
plt.plot(x, adaptive, color='blue', linestyle='-', label='Adaptive')
plt.plot(x, grid, color='red', linestyle='--', label='Boustrophedon')
plt.xlabel('Number of samples taken')
plt.ylabel('EMD score')
plt.legend()
plt.show()
